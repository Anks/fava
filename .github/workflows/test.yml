name: Test

on:
    workflow_dispatch:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    test-py:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: ["ubuntu-latest", "macos-latest", "windows-latest"]
                py: ["3.11", "3.7"]
                toxenv: ["py", "old_deps"]
                exclude:
                    - os: "macos-latest"
                      toxenv: "old_deps"
                    - os: "windows-latest"
                      toxenv: "old_deps"
                    - os: "windows-latest"
                      py: "3.11"
                include:
                    - os: "windows-latest"
                      py: "3.10"
                      toxenv: "py"
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.py }}
            - run: pip install tox
            - run: tox -e ${{ matrix.toxenv }}
    test-js:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: "lts/*"
                  cache: "npm"
                  cache-dependency-path: frontend/package-lock.json
            - run: cd frontend && npm ci
            - run: cd frontend && npm run build
            - run: cd frontend && npm test
    lint-js:
        runs-on: "ubuntu-latest"
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-python@v4
              with:
                  python-version: "3.11"
            - uses: actions/setup-node@v3
              with:
                  node-version: "lts/*"
                  cache: "npm"
                  cache-dependency-path: frontend/package-lock.json
            - run: pip install pre-commit
            - run: cd frontend && npm ci
            - run: pre-commit run -a eslint
            - run: cd frontend; npx tsc
            - run: cd frontend; npx svelte-check
    lint-python:
        runs-on: "ubuntu-latest"
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-python@v4
              with:
                  python-version: "3.11"
            - run: pip install tox
            - run: tox -e lint
    build-pyinstaller:
        runs-on: "ubuntu-latest"
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-python@v4
              with:
                  python-version: "3.11"
            - run: pip install tox
            - run: tox -e pyinstaller
